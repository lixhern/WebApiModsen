{
  "version": 3,
  "sources": ["../../../../../node_modules/jose/dist/node/esm/runtime/base64url.js", "../../../../../node_modules/jose/dist/node/esm/runtime/digest.js", "../../../../../node_modules/jose/dist/node/esm/lib/buffer_utils.js", "../../../../../node_modules/jose/dist/node/esm/runtime/decrypt.js", "../../../../../node_modules/jose/dist/node/esm/util/errors.js", "../../../../../node_modules/jose/dist/node/esm/runtime/random.js", "../../../../../node_modules/jose/dist/node/esm/lib/iv.js", "../../../../../node_modules/jose/dist/node/esm/lib/check_iv_length.js", "../../../../../node_modules/jose/dist/node/esm/runtime/is_key_object.js", "../../../../../node_modules/jose/dist/node/esm/runtime/check_cek_length.js", "../../../../../node_modules/jose/dist/node/esm/runtime/timing_safe_equal.js", "../../../../../node_modules/jose/dist/node/esm/runtime/cbc_tag.js", "../../../../../node_modules/jose/dist/node/esm/runtime/webcrypto.js", "../../../../../node_modules/jose/dist/node/esm/lib/crypto_key.js", "../../../../../node_modules/jose/dist/node/esm/lib/invalid_key_input.js", "../../../../../node_modules/jose/dist/node/esm/runtime/ciphers.js", "../../../../../node_modules/jose/dist/node/esm/runtime/is_key_like.js", "../../../../../node_modules/jose/dist/node/esm/lib/is_disjoint.js", "../../../../../node_modules/jose/dist/node/esm/lib/is_object.js", "../../../../../node_modules/jose/dist/node/esm/runtime/aeskw.js", "../../../../../node_modules/jose/dist/node/esm/runtime/ecdhes.js", "../../../../../node_modules/jose/dist/node/esm/runtime/get_named_curve.js", "../../../../../node_modules/jose/dist/node/esm/runtime/pbes2kw.js", "../../../../../node_modules/jose/dist/node/esm/lib/check_p2s.js", "../../../../../node_modules/jose/dist/node/esm/runtime/rsaes.js", "../../../../../node_modules/jose/dist/node/esm/runtime/check_key_length.js", "../../../../../node_modules/jose/dist/node/esm/runtime/normalize_key.js", "../../../../../node_modules/jose/dist/node/esm/lib/cek.js", "../../../../../node_modules/jose/dist/node/esm/runtime/asn1.js", "../../../../../node_modules/jose/dist/node/esm/runtime/jwk_to_key.js", "../../../../../node_modules/jose/dist/node/esm/key/import.js", "../../../../../node_modules/jose/dist/node/esm/lib/check_key_type.js", "../../../../../node_modules/jose/dist/node/esm/runtime/encrypt.js", "../../../../../node_modules/jose/dist/node/esm/lib/aesgcmkw.js", "../../../../../node_modules/jose/dist/node/esm/lib/decrypt_key_management.js", "../../../../../node_modules/jose/dist/node/esm/lib/validate_crit.js", "../../../../../node_modules/jose/dist/node/esm/lib/validate_algorithms.js", "../../../../../node_modules/jose/dist/node/esm/jwe/flattened/decrypt.js", "../../../../../node_modules/jose/dist/node/esm/jwe/compact/decrypt.js", "../../../../../node_modules/jose/dist/node/esm/jwe/general/decrypt.js", "../../../../../node_modules/jose/dist/node/esm/runtime/key_to_jwk.js", "../../../../../node_modules/jose/dist/node/esm/key/export.js", "../../../../../node_modules/jose/dist/node/esm/lib/encrypt_key_management.js", "../../../../../node_modules/jose/dist/node/esm/jwe/flattened/encrypt.js", "../../../../../node_modules/jose/dist/node/esm/jwe/general/encrypt.js", "../../../../../node_modules/jose/dist/node/esm/runtime/verify.js", "../../../../../node_modules/jose/dist/node/esm/runtime/dsa_digest.js", "../../../../../node_modules/jose/dist/node/esm/runtime/node_key.js", "../../../../../node_modules/jose/dist/node/esm/runtime/sign.js", "../../../../../node_modules/jose/dist/node/esm/runtime/hmac_digest.js", "../../../../../node_modules/jose/dist/node/esm/runtime/get_sign_verify_key.js", "../../../../../node_modules/jose/dist/node/esm/jws/flattened/verify.js", "../../../../../node_modules/jose/dist/node/esm/jws/compact/verify.js", "../../../../../node_modules/jose/dist/node/esm/jws/general/verify.js", "../../../../../node_modules/jose/dist/node/esm/lib/epoch.js", "../../../../../node_modules/jose/dist/node/esm/lib/secs.js", "../../../../../node_modules/jose/dist/node/esm/lib/jwt_claims_set.js", "../../../../../node_modules/jose/dist/node/esm/jwt/verify.js", "../../../../../node_modules/jose/dist/node/esm/jwt/decrypt.js", "../../../../../node_modules/jose/dist/node/esm/jwe/compact/encrypt.js", "../../../../../node_modules/jose/dist/node/esm/jws/flattened/sign.js", "../../../../../node_modules/jose/dist/node/esm/jws/compact/sign.js", "../../../../../node_modules/jose/dist/node/esm/jws/general/sign.js", "../../../../../node_modules/jose/dist/node/esm/jwt/produce.js", "../../../../../node_modules/jose/dist/node/esm/jwt/sign.js", "../../../../../node_modules/jose/dist/node/esm/jwt/encrypt.js", "../../../../../node_modules/jose/dist/node/esm/jwk/thumbprint.js", "../../../../../node_modules/jose/dist/node/esm/jwk/embedded.js", "../../../../../node_modules/jose/dist/node/esm/jwks/local.js", "../../../../../node_modules/jose/dist/node/esm/runtime/fetch_jwks.js", "../../../../../node_modules/jose/dist/node/esm/jwks/remote.js", "../../../../../node_modules/jose/dist/node/esm/jwt/unsecured.js", "../../../../../node_modules/jose/dist/node/esm/util/base64url.js", "../../../../../node_modules/jose/dist/node/esm/util/decode_protected_header.js", "../../../../../node_modules/jose/dist/node/esm/util/decode_jwt.js", "../../../../../node_modules/jose/dist/node/esm/runtime/generate.js", "../../../../../node_modules/jose/dist/node/esm/key/generate_key_pair.js", "../../../../../node_modules/jose/dist/node/esm/key/generate_secret.js", "../../../../../node_modules/jose/dist/node/esm/runtime/runtime.js", "../../../../../node_modules/jose/dist/node/esm/util/runtime.js"],
  "sourcesContent": ["import { Buffer } from 'node:buffer';\nimport { decoder } from '../lib/buffer_utils.js';\nfunction normalize(input) {\n  let encoded = input;\n  if (encoded instanceof Uint8Array) {\n    encoded = decoder.decode(encoded);\n  }\n  return encoded;\n}\nconst encode = input => Buffer.from(input).toString('base64url');\nexport const decodeBase64 = input => new Uint8Array(Buffer.from(input, 'base64'));\nexport const encodeBase64 = input => Buffer.from(input).toString('base64');\nexport { encode };\nexport const decode = input => new Uint8Array(Buffer.from(normalize(input), 'base64'));", "import { createHash } from 'node:crypto';\nconst digest = (algorithm, data) => createHash(algorithm).update(data).digest();\nexport default digest;", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n  const size = buffers.reduce((acc, {\n    length\n  }) => acc + length, 0);\n  const buf = new Uint8Array(size);\n  let i = 0;\n  for (const buffer of buffers) {\n    buf.set(buffer, i);\n    i += buffer.length;\n  }\n  return buf;\n}\nexport function p2s(alg, p2sInput) {\n  return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n  if (value < 0 || value >= MAX_INT32) {\n    throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n  }\n  buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n  const high = Math.floor(value / MAX_INT32);\n  const low = value % MAX_INT32;\n  const buf = new Uint8Array(8);\n  writeUInt32BE(buf, high, 0);\n  writeUInt32BE(buf, low, 4);\n  return buf;\n}\nexport function uint32be(value) {\n  const buf = new Uint8Array(4);\n  writeUInt32BE(buf, value);\n  return buf;\n}\nexport function lengthAndInput(input) {\n  return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n  const iterations = Math.ceil((bits >> 3) / 32);\n  const res = new Uint8Array(iterations * 32);\n  for (let iter = 0; iter < iterations; iter++) {\n    const buf = new Uint8Array(4 + secret.length + value.length);\n    buf.set(uint32be(iter + 1));\n    buf.set(secret, 4);\n    buf.set(value, 4 + secret.length);\n    res.set(await digest('sha256', buf), iter * 32);\n  }\n  return res.slice(0, bits >> 3);\n}", "import { createDecipheriv, KeyObject } from 'node:crypto';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport { concat } from '../lib/buffer_utils.js';\nimport { JOSENotSupported, JWEDecryptionFailed, JWEInvalid } from '../util/errors.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport cbcTag from './cbc_tag.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport supported from './ciphers.js';\nimport { types } from './is_key_like.js';\nfunction cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  if (isKeyObject(cek)) {\n    cek = cek.export();\n  }\n  const encKey = cek.subarray(keySize >> 3);\n  const macKey = cek.subarray(0, keySize >> 3);\n  const macSize = parseInt(enc.slice(-3), 10);\n  const algorithm = `aes-${keySize}-cbc`;\n  if (!supported(algorithm)) {\n    throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  const expectedTag = cbcTag(aad, iv, ciphertext, macSize, macKey, keySize);\n  let macCheckPassed;\n  try {\n    macCheckPassed = timingSafeEqual(tag, expectedTag);\n  } catch {}\n  if (!macCheckPassed) {\n    throw new JWEDecryptionFailed();\n  }\n  let plaintext;\n  try {\n    const decipher = createDecipheriv(algorithm, encKey, iv);\n    plaintext = concat(decipher.update(ciphertext), decipher.final());\n  } catch {}\n  if (!plaintext) {\n    throw new JWEDecryptionFailed();\n  }\n  return plaintext;\n}\nfunction gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  const algorithm = `aes-${keySize}-gcm`;\n  if (!supported(algorithm)) {\n    throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  try {\n    const decipher = createDecipheriv(algorithm, cek, iv, {\n      authTagLength: 16\n    });\n    decipher.setAuthTag(tag);\n    if (aad.byteLength) {\n      decipher.setAAD(aad, {\n        plaintextLength: ciphertext.length\n      });\n    }\n    const plaintext = decipher.update(ciphertext);\n    decipher.final();\n    return plaintext;\n  } catch {\n    throw new JWEDecryptionFailed();\n  }\n}\nconst decrypt = (enc, cek, ciphertext, iv, tag, aad) => {\n  let key;\n  if (isCryptoKey(cek)) {\n    checkEncCryptoKey(cek, enc, 'decrypt');\n    key = KeyObject.from(cek);\n  } else if (cek instanceof Uint8Array || isKeyObject(cek)) {\n    key = cek;\n  } else {\n    throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n  }\n  if (!iv) {\n    throw new JWEInvalid('JWE Initialization Vector missing');\n  }\n  if (!tag) {\n    throw new JWEInvalid('JWE Authentication Tag missing');\n  }\n  checkCekLength(enc, key);\n  checkIvLength(enc, iv);\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      return cbcDecrypt(enc, key, ciphertext, iv, tag, aad);\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      return gcmDecrypt(enc, key, ciphertext, iv, tag, aad);\n    default:\n      throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n  }\n};\nexport default decrypt;", "export class JOSEError extends Error {\n  static get code() {\n    return 'ERR_JOSE_GENERIC';\n  }\n  code = 'ERR_JOSE_GENERIC';\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace?.(this, this.constructor);\n  }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n  static get code() {\n    return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n  }\n  code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n  claim;\n  reason;\n  payload;\n  constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n    super(message);\n    this.claim = claim;\n    this.reason = reason;\n    this.payload = payload;\n  }\n}\nexport class JWTExpired extends JOSEError {\n  static get code() {\n    return 'ERR_JWT_EXPIRED';\n  }\n  code = 'ERR_JWT_EXPIRED';\n  claim;\n  reason;\n  payload;\n  constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n    super(message);\n    this.claim = claim;\n    this.reason = reason;\n    this.payload = payload;\n  }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n  static get code() {\n    return 'ERR_JOSE_ALG_NOT_ALLOWED';\n  }\n  code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n}\nexport class JOSENotSupported extends JOSEError {\n  static get code() {\n    return 'ERR_JOSE_NOT_SUPPORTED';\n  }\n  code = 'ERR_JOSE_NOT_SUPPORTED';\n}\nexport class JWEDecryptionFailed extends JOSEError {\n  static get code() {\n    return 'ERR_JWE_DECRYPTION_FAILED';\n  }\n  code = 'ERR_JWE_DECRYPTION_FAILED';\n  message = 'decryption operation failed';\n}\nexport class JWEInvalid extends JOSEError {\n  static get code() {\n    return 'ERR_JWE_INVALID';\n  }\n  code = 'ERR_JWE_INVALID';\n}\nexport class JWSInvalid extends JOSEError {\n  static get code() {\n    return 'ERR_JWS_INVALID';\n  }\n  code = 'ERR_JWS_INVALID';\n}\nexport class JWTInvalid extends JOSEError {\n  static get code() {\n    return 'ERR_JWT_INVALID';\n  }\n  code = 'ERR_JWT_INVALID';\n}\nexport class JWKInvalid extends JOSEError {\n  static get code() {\n    return 'ERR_JWK_INVALID';\n  }\n  code = 'ERR_JWK_INVALID';\n}\nexport class JWKSInvalid extends JOSEError {\n  static get code() {\n    return 'ERR_JWKS_INVALID';\n  }\n  code = 'ERR_JWKS_INVALID';\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n  static get code() {\n    return 'ERR_JWKS_NO_MATCHING_KEY';\n  }\n  code = 'ERR_JWKS_NO_MATCHING_KEY';\n  message = 'no applicable key found in the JSON Web Key Set';\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n  [Symbol.asyncIterator];\n  static get code() {\n    return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n  }\n  code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n  message = 'multiple matching keys found in the JSON Web Key Set';\n}\nexport class JWKSTimeout extends JOSEError {\n  static get code() {\n    return 'ERR_JWKS_TIMEOUT';\n  }\n  code = 'ERR_JWKS_TIMEOUT';\n  message = 'request timed out';\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n  static get code() {\n    return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n  }\n  code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n  message = 'signature verification failed';\n}", "export { randomFillSync as default } from 'node:crypto';", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n  switch (alg) {\n    case 'A128GCM':\n    case 'A128GCMKW':\n    case 'A192GCM':\n    case 'A192GCMKW':\n    case 'A256GCM':\n    case 'A256GCMKW':\n      return 96;\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      return 128;\n    default:\n      throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n  }\n}\nexport default (alg => random(new Uint8Array(bitLength(alg) >> 3)));", "import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n  if (iv.length << 3 !== bitLength(enc)) {\n    throw new JWEInvalid('Invalid Initialization Vector length');\n  }\n};\nexport default checkIvLength;", "import * as util from 'node:util';\nexport default (obj => util.types.isKeyObject(obj));", "import { JWEInvalid, JOSENotSupported } from '../util/errors.js';\nimport isKeyObject from './is_key_object.js';\nconst checkCekLength = (enc, cek) => {\n  let expected;\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      expected = parseInt(enc.slice(-3), 10);\n      break;\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      expected = parseInt(enc.slice(1, 4), 10);\n      break;\n    default:\n      throw new JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n  }\n  if (cek instanceof Uint8Array) {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n      throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n    return;\n  }\n  if (isKeyObject(cek) && cek.type === 'secret') {\n    const actual = cek.symmetricKeySize << 3;\n    if (actual !== expected) {\n      throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n    return;\n  }\n  throw new TypeError('Invalid Content Encryption Key type');\n};\nexport default checkCekLength;", "import { timingSafeEqual as impl } from 'node:crypto';\nconst timingSafeEqual = impl;\nexport default timingSafeEqual;", "import { createHmac } from 'node:crypto';\nimport { concat, uint64be } from '../lib/buffer_utils.js';\nexport default function cbcTag(aad, iv, ciphertext, macSize, macKey, keySize) {\n  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n  const hmac = createHmac(`sha${macSize}`, macKey);\n  hmac.update(macData);\n  return hmac.digest().slice(0, keySize >> 3);\n}", "import * as crypto from 'node:crypto';\nimport * as util from 'node:util';\nconst webcrypto = crypto.webcrypto;\nexport default webcrypto;\nexport const isCryptoKey = key => util.types.isCryptoKey(key);", "function unusable(name, prop = 'algorithm.name') {\n  return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n  return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n  return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n  switch (alg) {\n    case 'ES256':\n      return 'P-256';\n    case 'ES384':\n      return 'P-384';\n    case 'ES512':\n      return 'P-521';\n    default:\n      throw new Error('unreachable');\n  }\n}\nfunction checkUsage(key, usages) {\n  if (usages.length && !usages.some(expected => key.usages.includes(expected))) {\n    let msg = 'CryptoKey does not support this operation, its usages must include ';\n    if (usages.length > 2) {\n      const last = usages.pop();\n      msg += `one of ${usages.join(', ')}, or ${last}.`;\n    } else if (usages.length === 2) {\n      msg += `one of ${usages[0]} or ${usages[1]}.`;\n    } else {\n      msg += `${usages[0]}.`;\n    }\n    throw new TypeError(msg);\n  }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n  switch (alg) {\n    case 'HS256':\n    case 'HS384':\n    case 'HS512':\n      {\n        if (!isAlgorithm(key.algorithm, 'HMAC')) throw unusable('HMAC');\n        const expected = parseInt(alg.slice(2), 10);\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    case 'RS256':\n    case 'RS384':\n    case 'RS512':\n      {\n        if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5')) throw unusable('RSASSA-PKCS1-v1_5');\n        const expected = parseInt(alg.slice(2), 10);\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    case 'PS256':\n    case 'PS384':\n    case 'PS512':\n      {\n        if (!isAlgorithm(key.algorithm, 'RSA-PSS')) throw unusable('RSA-PSS');\n        const expected = parseInt(alg.slice(2), 10);\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    case 'EdDSA':\n      {\n        if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n          throw unusable('Ed25519 or Ed448');\n        }\n        break;\n      }\n    case 'ES256':\n    case 'ES384':\n    case 'ES512':\n      {\n        if (!isAlgorithm(key.algorithm, 'ECDSA')) throw unusable('ECDSA');\n        const expected = getNamedCurve(alg);\n        const actual = key.algorithm.namedCurve;\n        if (actual !== expected) throw unusable(expected, 'algorithm.namedCurve');\n        break;\n      }\n    default:\n      throw new TypeError('CryptoKey does not support this operation');\n  }\n  checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n  switch (alg) {\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      {\n        if (!isAlgorithm(key.algorithm, 'AES-GCM')) throw unusable('AES-GCM');\n        const expected = parseInt(alg.slice(1, 4), 10);\n        const actual = key.algorithm.length;\n        if (actual !== expected) throw unusable(expected, 'algorithm.length');\n        break;\n      }\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n      {\n        if (!isAlgorithm(key.algorithm, 'AES-KW')) throw unusable('AES-KW');\n        const expected = parseInt(alg.slice(1, 4), 10);\n        const actual = key.algorithm.length;\n        if (actual !== expected) throw unusable(expected, 'algorithm.length');\n        break;\n      }\n    case 'ECDH':\n      {\n        switch (key.algorithm.name) {\n          case 'ECDH':\n          case 'X25519':\n          case 'X448':\n            break;\n          default:\n            throw unusable('ECDH, X25519, or X448');\n        }\n        break;\n      }\n    case 'PBES2-HS256+A128KW':\n    case 'PBES2-HS384+A192KW':\n    case 'PBES2-HS512+A256KW':\n      if (!isAlgorithm(key.algorithm, 'PBKDF2')) throw unusable('PBKDF2');\n      break;\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      {\n        if (!isAlgorithm(key.algorithm, 'RSA-OAEP')) throw unusable('RSA-OAEP');\n        const expected = parseInt(alg.slice(9), 10) || 1;\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    default:\n      throw new TypeError('CryptoKey does not support this operation');\n  }\n  checkUsage(key, usages);\n}", "function message(msg, actual, ...types) {\n  if (types.length > 2) {\n    const last = types.pop();\n    msg += `one of type ${types.join(', ')}, or ${last}.`;\n  } else if (types.length === 2) {\n    msg += `one of type ${types[0]} or ${types[1]}.`;\n  } else {\n    msg += `of type ${types[0]}.`;\n  }\n  if (actual == null) {\n    msg += ` Received ${actual}`;\n  } else if (typeof actual === 'function' && actual.name) {\n    msg += ` Received function ${actual.name}`;\n  } else if (typeof actual === 'object' && actual != null) {\n    if (actual.constructor?.name) {\n      msg += ` Received an instance of ${actual.constructor.name}`;\n    }\n  }\n  return msg;\n}\nexport default ((actual, ...types) => {\n  return message('Key must be ', actual, ...types);\n});\nexport function withAlg(alg, actual, ...types) {\n  return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}", "import { getCiphers } from 'node:crypto';\nlet ciphers;\nexport default (algorithm => {\n  ciphers ||= new Set(getCiphers());\n  return ciphers.has(algorithm);\n});", "import webcrypto, { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nexport default (key => isKeyObject(key) || isCryptoKey(key));\nconst types = ['KeyObject'];\nif (globalThis.CryptoKey || webcrypto?.CryptoKey) {\n  types.push('CryptoKey');\n}\nexport { types };", "const isDisjoint = (...headers) => {\n  const sources = headers.filter(Boolean);\n  if (sources.length === 0 || sources.length === 1) {\n    return true;\n  }\n  let acc;\n  for (const header of sources) {\n    const parameters = Object.keys(header);\n    if (!acc || acc.size === 0) {\n      acc = new Set(parameters);\n      continue;\n    }\n    for (const parameter of parameters) {\n      if (acc.has(parameter)) {\n        return false;\n      }\n      acc.add(parameter);\n    }\n  }\n  return true;\n};\nexport default isDisjoint;", "function isObjectLike(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n  if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n    return false;\n  }\n  if (Object.getPrototypeOf(input) === null) {\n    return true;\n  }\n  let proto = input;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(input) === proto;\n}", "import { Buffer } from 'node:buffer';\nimport { KeyObject, createDecipheriv, createCipheriv, createSecretKey } from 'node:crypto';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { concat } from '../lib/buffer_utils.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport supported from './ciphers.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n  if (key.symmetricKeySize << 3 !== parseInt(alg.slice(1, 4), 10)) {\n    throw new TypeError(`Invalid key size for alg: ${alg}`);\n  }\n}\nfunction ensureKeyObject(key, alg, usage) {\n  if (isKeyObject(key)) {\n    return key;\n  }\n  if (key instanceof Uint8Array) {\n    return createSecretKey(key);\n  }\n  if (isCryptoKey(key)) {\n    checkEncCryptoKey(key, alg, usage);\n    return KeyObject.from(key);\n  }\n  throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = (alg, key, cek) => {\n  const size = parseInt(alg.slice(1, 4), 10);\n  const algorithm = `aes${size}-wrap`;\n  if (!supported(algorithm)) {\n    throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n  const keyObject = ensureKeyObject(key, alg, 'wrapKey');\n  checkKeySize(keyObject, alg);\n  const cipher = createCipheriv(algorithm, keyObject, Buffer.alloc(8, 0xa6));\n  return concat(cipher.update(cek), cipher.final());\n};\nexport const unwrap = (alg, key, encryptedKey) => {\n  const size = parseInt(alg.slice(1, 4), 10);\n  const algorithm = `aes${size}-wrap`;\n  if (!supported(algorithm)) {\n    throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n  const keyObject = ensureKeyObject(key, alg, 'unwrapKey');\n  checkKeySize(keyObject, alg);\n  const cipher = createDecipheriv(algorithm, keyObject, Buffer.alloc(8, 0xa6));\n  return concat(cipher.update(encryptedKey), cipher.final());\n};", "import { diffieHellman, generateKeyPair as generateKeyPairCb, KeyObject } from 'node:crypto';\nimport { promisify } from 'node:util';\nimport getNamedCurve from './get_named_curve.js';\nimport { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst generateKeyPair = promisify(generateKeyPairCb);\nexport async function deriveKey(publicKee, privateKee, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n  let publicKey;\n  if (isCryptoKey(publicKee)) {\n    checkEncCryptoKey(publicKee, 'ECDH');\n    publicKey = KeyObject.from(publicKee);\n  } else if (isKeyObject(publicKee)) {\n    publicKey = publicKee;\n  } else {\n    throw new TypeError(invalidKeyInput(publicKee, ...types));\n  }\n  let privateKey;\n  if (isCryptoKey(privateKee)) {\n    checkEncCryptoKey(privateKee, 'ECDH', 'deriveBits');\n    privateKey = KeyObject.from(privateKee);\n  } else if (isKeyObject(privateKee)) {\n    privateKey = privateKee;\n  } else {\n    throw new TypeError(invalidKeyInput(privateKee, ...types));\n  }\n  const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n  const sharedSecret = diffieHellman({\n    privateKey,\n    publicKey\n  });\n  return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(kee) {\n  let key;\n  if (isCryptoKey(kee)) {\n    key = KeyObject.from(kee);\n  } else if (isKeyObject(kee)) {\n    key = kee;\n  } else {\n    throw new TypeError(invalidKeyInput(kee, ...types));\n  }\n  switch (key.asymmetricKeyType) {\n    case 'x25519':\n      return generateKeyPair('x25519');\n    case 'x448':\n      {\n        return generateKeyPair('x448');\n      }\n    case 'ec':\n      {\n        const namedCurve = getNamedCurve(key);\n        return generateKeyPair('ec', {\n          namedCurve\n        });\n      }\n    default:\n      throw new JOSENotSupported('Invalid or unsupported EPK');\n  }\n}\nexport const ecdhAllowed = key => ['P-256', 'P-384', 'P-521', 'X25519', 'X448'].includes(getNamedCurve(key));", "import { KeyObject } from 'node:crypto';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const weakMap = new WeakMap();\nconst namedCurveToJOSE = namedCurve => {\n  switch (namedCurve) {\n    case 'prime256v1':\n      return 'P-256';\n    case 'secp384r1':\n      return 'P-384';\n    case 'secp521r1':\n      return 'P-521';\n    case 'secp256k1':\n      return 'secp256k1';\n    default:\n      throw new JOSENotSupported('Unsupported key curve for this operation');\n  }\n};\nconst getNamedCurve = (kee, raw) => {\n  let key;\n  if (isCryptoKey(kee)) {\n    key = KeyObject.from(kee);\n  } else if (isKeyObject(kee)) {\n    key = kee;\n  } else {\n    throw new TypeError(invalidKeyInput(kee, ...types));\n  }\n  if (key.type === 'secret') {\n    throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n  }\n  switch (key.asymmetricKeyType) {\n    case 'ed25519':\n    case 'ed448':\n      return `Ed${key.asymmetricKeyType.slice(2)}`;\n    case 'x25519':\n    case 'x448':\n      return `X${key.asymmetricKeyType.slice(1)}`;\n    case 'ec':\n      {\n        const namedCurve = key.asymmetricKeyDetails.namedCurve;\n        if (raw) {\n          return namedCurve;\n        }\n        return namedCurveToJOSE(namedCurve);\n      }\n    default:\n      throw new TypeError('Invalid asymmetric key type for this operation');\n  }\n};\nexport default getNamedCurve;", "import { promisify } from 'node:util';\nimport { KeyObject, pbkdf2 as pbkdf2cb } from 'node:crypto';\nimport random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst pbkdf2 = promisify(pbkdf2cb);\nfunction getPassword(key, alg) {\n  if (isKeyObject(key)) {\n    return key.export();\n  }\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n  if (isCryptoKey(key)) {\n    checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n    return KeyObject.from(key).export();\n  }\n  throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n  checkP2s(p2s);\n  const salt = concatSalt(alg, p2s);\n  const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n  const password = getPassword(key, alg);\n  const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n  const encryptedKey = await wrap(alg.slice(-6), derivedKey, cek);\n  return {\n    encryptedKey,\n    p2c,\n    p2s: base64url(p2s)\n  };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n  checkP2s(p2s);\n  const salt = concatSalt(alg, p2s);\n  const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n  const password = getPassword(key, alg);\n  const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n  return unwrap(alg.slice(-6), derivedKey, encryptedKey);\n};", "import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n  if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n    throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n  }\n}", "import { KeyObject, publicEncrypt, constants, privateDecrypt } from 'node:crypto';\nimport { deprecate } from 'node:util';\nimport checkKeyLength from './check_key_length.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst checkKey = (key, alg) => {\n  if (key.asymmetricKeyType !== 'rsa') {\n    throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n  }\n  checkKeyLength(key, alg);\n};\nconst RSA1_5 = deprecate(() => constants.RSA_PKCS1_PADDING, 'The RSA1_5 \"alg\" (JWE Algorithm) is deprecated and will be removed in the next major revision.');\nconst resolvePadding = alg => {\n  switch (alg) {\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      return constants.RSA_PKCS1_OAEP_PADDING;\n    case 'RSA1_5':\n      return RSA1_5();\n    default:\n      return undefined;\n  }\n};\nconst resolveOaepHash = alg => {\n  switch (alg) {\n    case 'RSA-OAEP':\n      return 'sha1';\n    case 'RSA-OAEP-256':\n      return 'sha256';\n    case 'RSA-OAEP-384':\n      return 'sha384';\n    case 'RSA-OAEP-512':\n      return 'sha512';\n    default:\n      return undefined;\n  }\n};\nfunction ensureKeyObject(key, alg, ...usages) {\n  if (isKeyObject(key)) {\n    return key;\n  }\n  if (isCryptoKey(key)) {\n    checkEncCryptoKey(key, alg, ...usages);\n    return KeyObject.from(key);\n  }\n  throw new TypeError(invalidKeyInput(key, ...types));\n}\nexport const encrypt = (alg, key, cek) => {\n  const padding = resolvePadding(alg);\n  const oaepHash = resolveOaepHash(alg);\n  const keyObject = ensureKeyObject(key, alg, 'wrapKey', 'encrypt');\n  checkKey(keyObject, alg);\n  return publicEncrypt({\n    key: keyObject,\n    oaepHash,\n    padding\n  }, cek);\n};\nexport const decrypt = (alg, key, encryptedKey) => {\n  const padding = resolvePadding(alg);\n  const oaepHash = resolveOaepHash(alg);\n  const keyObject = ensureKeyObject(key, alg, 'unwrapKey', 'decrypt');\n  checkKey(keyObject, alg);\n  return privateDecrypt({\n    key: keyObject,\n    oaepHash,\n    padding\n  }, encryptedKey);\n};", "export default ((key, alg) => {\n  const {\n    modulusLength\n  } = key.asymmetricKeyDetails;\n  if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n    throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n  }\n});", "export default {};", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n  switch (alg) {\n    case 'A128GCM':\n      return 128;\n    case 'A192GCM':\n      return 192;\n    case 'A256GCM':\n    case 'A128CBC-HS256':\n      return 256;\n    case 'A192CBC-HS384':\n      return 384;\n    case 'A256CBC-HS512':\n      return 512;\n    default:\n      throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n  }\n}\nexport default (alg => random(new Uint8Array(bitLength(alg) >> 3)));", "import { createPrivateKey, createPublicKey, KeyObject } from 'node:crypto';\nimport { Buffer } from 'node:buffer';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst genericExport = (keyType, keyFormat, key) => {\n  let keyObject;\n  if (isCryptoKey(key)) {\n    if (!key.extractable) {\n      throw new TypeError('CryptoKey is not extractable');\n    }\n    keyObject = KeyObject.from(key);\n  } else if (isKeyObject(key)) {\n    keyObject = key;\n  } else {\n    throw new TypeError(invalidKeyInput(key, ...types));\n  }\n  if (keyObject.type !== keyType) {\n    throw new TypeError(`key is not a ${keyType} key`);\n  }\n  return keyObject.export({\n    format: 'pem',\n    type: keyFormat\n  });\n};\nexport const toSPKI = key => {\n  return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = key => {\n  return genericExport('private', 'pkcs8', key);\n};\nexport const fromPKCS8 = pem => createPrivateKey({\n  key: Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, ''), 'base64'),\n  type: 'pkcs8',\n  format: 'der'\n});\nexport const fromSPKI = pem => createPublicKey({\n  key: Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, ''), 'base64'),\n  type: 'spki',\n  format: 'der'\n});\nexport const fromX509 = pem => createPublicKey({\n  key: pem,\n  type: 'spki',\n  format: 'pem'\n});", "import { createPrivateKey, createPublicKey } from 'node:crypto';\nconst parse = jwk => {\n  return (jwk.d ? createPrivateKey : createPublicKey)({\n    format: 'jwk',\n    key: jwk\n  });\n};\nexport default parse;", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n  if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n    throw new TypeError('\"spki\" must be SPKI formatted string');\n  }\n  return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n  if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n    throw new TypeError('\"x509\" must be X.509 formatted string');\n  }\n  return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n  if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n    throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n  }\n  return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n  if (!isObject(jwk)) {\n    throw new TypeError('JWK must be an object');\n  }\n  alg ||= jwk.alg;\n  switch (jwk.kty) {\n    case 'oct':\n      if (typeof jwk.k !== 'string' || !jwk.k) {\n        throw new TypeError('missing \"k\" (Key Value) Parameter value');\n      }\n      return decodeBase64URL(jwk.k);\n    case 'RSA':\n      if (jwk.oth !== undefined) {\n        throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n      }\n    case 'EC':\n    case 'OKP':\n      return asKeyObject({\n        ...jwk,\n        alg\n      });\n    default:\n      throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n  }\n}", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst tag = key => key?.[Symbol.toStringTag];\nconst symmetricTypeCheck = (alg, key) => {\n  if (key instanceof Uint8Array) return;\n  if (!isKeyLike(key)) {\n    throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n  }\n  if (key.type !== 'secret') {\n    throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n  }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n  if (!isKeyLike(key)) {\n    throw new TypeError(invalidKeyInput(alg, key, ...types));\n  }\n  if (key.type === 'secret') {\n    throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n  }\n  if (usage === 'sign' && key.type === 'public') {\n    throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n  }\n  if (usage === 'decrypt' && key.type === 'public') {\n    throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n  }\n  if (key.algorithm && usage === 'verify' && key.type === 'private') {\n    throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n  }\n  if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n    throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n  }\n};\nconst checkKeyType = (alg, key, usage) => {\n  const symmetric = alg.startsWith('HS') || alg === 'dir' || alg.startsWith('PBES2') || /^A\\d{3}(?:GCM)?KW$/.test(alg);\n  if (symmetric) {\n    symmetricTypeCheck(alg, key);\n  } else {\n    asymmetricTypeCheck(alg, key, usage);\n  }\n};\nexport default checkKeyType;", "import { createCipheriv, KeyObject } from 'node:crypto';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport { concat } from '../lib/buffer_utils.js';\nimport cbcTag from './cbc_tag.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport generateIv from '../lib/iv.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport supported from './ciphers.js';\nimport { types } from './is_key_like.js';\nfunction cbcEncrypt(enc, plaintext, cek, iv, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  if (isKeyObject(cek)) {\n    cek = cek.export();\n  }\n  const encKey = cek.subarray(keySize >> 3);\n  const macKey = cek.subarray(0, keySize >> 3);\n  const algorithm = `aes-${keySize}-cbc`;\n  if (!supported(algorithm)) {\n    throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  const cipher = createCipheriv(algorithm, encKey, iv);\n  const ciphertext = concat(cipher.update(plaintext), cipher.final());\n  const macSize = parseInt(enc.slice(-3), 10);\n  const tag = cbcTag(aad, iv, ciphertext, macSize, macKey, keySize);\n  return {\n    ciphertext,\n    tag,\n    iv\n  };\n}\nfunction gcmEncrypt(enc, plaintext, cek, iv, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  const algorithm = `aes-${keySize}-gcm`;\n  if (!supported(algorithm)) {\n    throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  const cipher = createCipheriv(algorithm, cek, iv, {\n    authTagLength: 16\n  });\n  if (aad.byteLength) {\n    cipher.setAAD(aad, {\n      plaintextLength: plaintext.length\n    });\n  }\n  const ciphertext = cipher.update(plaintext);\n  cipher.final();\n  const tag = cipher.getAuthTag();\n  return {\n    ciphertext,\n    tag,\n    iv\n  };\n}\nconst encrypt = (enc, plaintext, cek, iv, aad) => {\n  let key;\n  if (isCryptoKey(cek)) {\n    checkEncCryptoKey(cek, enc, 'encrypt');\n    key = KeyObject.from(cek);\n  } else if (cek instanceof Uint8Array || isKeyObject(cek)) {\n    key = cek;\n  } else {\n    throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n  }\n  checkCekLength(enc, key);\n  if (iv) {\n    checkIvLength(enc, iv);\n  } else {\n    iv = generateIv(enc);\n  }\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      return cbcEncrypt(enc, plaintext, key, iv, aad);\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      return gcmEncrypt(enc, plaintext, key, iv, aad);\n    default:\n      throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n  }\n};\nexport default encrypt;", "import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n  const jweAlgorithm = alg.slice(0, 7);\n  const wrapped = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n  return {\n    encryptedKey: wrapped.ciphertext,\n    iv: base64url(wrapped.iv),\n    tag: base64url(wrapped.tag)\n  };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n  const jweAlgorithm = alg.slice(0, 7);\n  return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}", "import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n  checkKeyType(alg, key, 'decrypt');\n  key = (await normalize.normalizePrivateKey?.(key, alg)) || key;\n  switch (alg) {\n    case 'dir':\n      {\n        if (encryptedKey !== undefined) throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        return key;\n      }\n    case 'ECDH-ES':\n      if (encryptedKey !== undefined) throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n    case 'ECDH-ES+A128KW':\n    case 'ECDH-ES+A192KW':\n    case 'ECDH-ES+A256KW':\n      {\n        if (!isObject(joseHeader.epk)) throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n        if (!ECDH.ecdhAllowed(key)) throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n        const epk = await importJWK(joseHeader.epk, alg);\n        let partyUInfo;\n        let partyVInfo;\n        if (joseHeader.apu !== undefined) {\n          if (typeof joseHeader.apu !== 'string') throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n          try {\n            partyUInfo = base64url(joseHeader.apu);\n          } catch {\n            throw new JWEInvalid('Failed to base64url decode the apu');\n          }\n        }\n        if (joseHeader.apv !== undefined) {\n          if (typeof joseHeader.apv !== 'string') throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n          try {\n            partyVInfo = base64url(joseHeader.apv);\n          } catch {\n            throw new JWEInvalid('Failed to base64url decode the apv');\n          }\n        }\n        const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n        if (alg === 'ECDH-ES') return sharedSecret;\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n      }\n    case 'RSA1_5':\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        return rsaEs(alg, key, encryptedKey);\n      }\n    case 'PBES2-HS256+A128KW':\n    case 'PBES2-HS384+A192KW':\n    case 'PBES2-HS512+A256KW':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        if (typeof joseHeader.p2c !== 'number') throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n        const p2cLimit = options?.maxPBES2Count || 10_000;\n        if (joseHeader.p2c > p2cLimit) throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n        if (typeof joseHeader.p2s !== 'string') throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n        let p2s;\n        try {\n          p2s = base64url(joseHeader.p2s);\n        } catch {\n          throw new JWEInvalid('Failed to base64url decode the p2s');\n        }\n        return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n      }\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        return aesKw(alg, key, encryptedKey);\n      }\n    case 'A128GCMKW':\n    case 'A192GCMKW':\n    case 'A256GCMKW':\n      {\n        if (encryptedKey === undefined) throw new JWEInvalid('JWE Encrypted Key missing');\n        if (typeof joseHeader.iv !== 'string') throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n        if (typeof joseHeader.tag !== 'string') throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n        let iv;\n        try {\n          iv = base64url(joseHeader.iv);\n        } catch {\n          throw new JWEInvalid('Failed to base64url decode the iv');\n        }\n        let tag;\n        try {\n          tag = base64url(joseHeader.tag);\n        } catch {\n          throw new JWEInvalid('Failed to base64url decode the tag');\n        }\n        return aesGcmKw(alg, key, encryptedKey, iv, tag);\n      }\n    default:\n      {\n        throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n      }\n  }\n}\nexport default decryptKeyManagement;", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n  if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n    throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n  }\n  if (!protectedHeader || protectedHeader.crit === undefined) {\n    return new Set();\n  }\n  if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some(input => typeof input !== 'string' || input.length === 0)) {\n    throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n  }\n  let recognized;\n  if (recognizedOption !== undefined) {\n    recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n  } else {\n    recognized = recognizedDefault;\n  }\n  for (const parameter of protectedHeader.crit) {\n    if (!recognized.has(parameter)) {\n      throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n    }\n    if (joseHeader[parameter] === undefined) {\n      throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n    }\n    if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n      throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n    }\n  }\n  return new Set(protectedHeader.crit);\n}\nexport default validateCrit;", "const validateAlgorithms = (option, algorithms) => {\n  if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some(s => typeof s !== 'string'))) {\n    throw new TypeError(`\"${option}\" option must be an array of strings`);\n  }\n  if (!algorithms) {\n    return undefined;\n  }\n  return new Set(algorithms);\n};\nexport default validateAlgorithms;", "import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n  if (!isObject(jwe)) {\n    throw new JWEInvalid('Flattened JWE must be an object');\n  }\n  if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n    throw new JWEInvalid('JOSE Header missing');\n  }\n  if (jwe.iv !== undefined && typeof jwe.iv !== 'string') {\n    throw new JWEInvalid('JWE Initialization Vector incorrect type');\n  }\n  if (typeof jwe.ciphertext !== 'string') {\n    throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n  }\n  if (jwe.tag !== undefined && typeof jwe.tag !== 'string') {\n    throw new JWEInvalid('JWE Authentication Tag incorrect type');\n  }\n  if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n    throw new JWEInvalid('JWE Protected Header incorrect type');\n  }\n  if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n    throw new JWEInvalid('JWE Encrypted Key incorrect type');\n  }\n  if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n    throw new JWEInvalid('JWE AAD incorrect type');\n  }\n  if (jwe.header !== undefined && !isObject(jwe.header)) {\n    throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n  }\n  if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n    throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n  }\n  let parsedProt;\n  if (jwe.protected) {\n    try {\n      const protectedHeader = base64url(jwe.protected);\n      parsedProt = JSON.parse(decoder.decode(protectedHeader));\n    } catch {\n      throw new JWEInvalid('JWE Protected Header is invalid');\n    }\n  }\n  if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n    throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n  }\n  const joseHeader = {\n    ...parsedProt,\n    ...jwe.header,\n    ...jwe.unprotected\n  };\n  validateCrit(JWEInvalid, new Map(), options?.crit, parsedProt, joseHeader);\n  if (joseHeader.zip !== undefined) {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n  }\n  const {\n    alg,\n    enc\n  } = joseHeader;\n  if (typeof alg !== 'string' || !alg) {\n    throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n  }\n  if (typeof enc !== 'string' || !enc) {\n    throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n  }\n  const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n  const contentEncryptionAlgorithms = options && validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n  if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg) || !keyManagementAlgorithms && alg.startsWith('PBES2')) {\n    throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n  }\n  if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n    throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter value not allowed');\n  }\n  let encryptedKey;\n  if (jwe.encrypted_key !== undefined) {\n    try {\n      encryptedKey = base64url(jwe.encrypted_key);\n    } catch {\n      throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n    }\n  }\n  let resolvedKey = false;\n  if (typeof key === 'function') {\n    key = await key(parsedProt, jwe);\n    resolvedKey = true;\n  }\n  let cek;\n  try {\n    cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n  } catch (err) {\n    if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n      throw err;\n    }\n    cek = generateCek(enc);\n  }\n  let iv;\n  let tag;\n  if (jwe.iv !== undefined) {\n    try {\n      iv = base64url(jwe.iv);\n    } catch {\n      throw new JWEInvalid('Failed to base64url decode the iv');\n    }\n  }\n  if (jwe.tag !== undefined) {\n    try {\n      tag = base64url(jwe.tag);\n    } catch {\n      throw new JWEInvalid('Failed to base64url decode the tag');\n    }\n  }\n  const protectedHeader = encoder.encode(jwe.protected ?? '');\n  let additionalData;\n  if (jwe.aad !== undefined) {\n    additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n  } else {\n    additionalData = protectedHeader;\n  }\n  let ciphertext;\n  try {\n    ciphertext = base64url(jwe.ciphertext);\n  } catch {\n    throw new JWEInvalid('Failed to base64url decode the ciphertext');\n  }\n  const plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n  const result = {\n    plaintext\n  };\n  if (jwe.protected !== undefined) {\n    result.protectedHeader = parsedProt;\n  }\n  if (jwe.aad !== undefined) {\n    try {\n      result.additionalAuthenticatedData = base64url(jwe.aad);\n    } catch {\n      throw new JWEInvalid('Failed to base64url decode the aad');\n    }\n  }\n  if (jwe.unprotected !== undefined) {\n    result.sharedUnprotectedHeader = jwe.unprotected;\n  }\n  if (jwe.header !== undefined) {\n    result.unprotectedHeader = jwe.header;\n  }\n  if (resolvedKey) {\n    return {\n      ...result,\n      key\n    };\n  }\n  return result;\n}", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n  if (jwe instanceof Uint8Array) {\n    jwe = decoder.decode(jwe);\n  }\n  if (typeof jwe !== 'string') {\n    throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n  }\n  const {\n    0: protectedHeader,\n    1: encryptedKey,\n    2: iv,\n    3: ciphertext,\n    4: tag,\n    length\n  } = jwe.split('.');\n  if (length !== 5) {\n    throw new JWEInvalid('Invalid Compact JWE');\n  }\n  const decrypted = await flattenedDecrypt({\n    ciphertext,\n    iv: iv || undefined,\n    protected: protectedHeader,\n    tag: tag || undefined,\n    encrypted_key: encryptedKey || undefined\n  }, key, options);\n  const result = {\n    plaintext: decrypted.plaintext,\n    protectedHeader: decrypted.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return {\n      ...result,\n      key: decrypted.key\n    };\n  }\n  return result;\n}", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n  if (!isObject(jwe)) {\n    throw new JWEInvalid('General JWE must be an object');\n  }\n  if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n    throw new JWEInvalid('JWE Recipients missing or incorrect type');\n  }\n  if (!jwe.recipients.length) {\n    throw new JWEInvalid('JWE Recipients has no members');\n  }\n  for (const recipient of jwe.recipients) {\n    try {\n      return await flattenedDecrypt({\n        aad: jwe.aad,\n        ciphertext: jwe.ciphertext,\n        encrypted_key: recipient.encrypted_key,\n        header: recipient.header,\n        iv: jwe.iv,\n        protected: jwe.protected,\n        tag: jwe.tag,\n        unprotected: jwe.unprotected\n      }, key, options);\n    } catch {}\n  }\n  throw new JWEDecryptionFailed();\n}", "import { KeyObject } from 'node:crypto';\nimport { encode as base64url } from './base64url.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = key => {\n  let keyObject;\n  if (isCryptoKey(key)) {\n    if (!key.extractable) {\n      throw new TypeError('CryptoKey is not extractable');\n    }\n    keyObject = KeyObject.from(key);\n  } else if (isKeyObject(key)) {\n    keyObject = key;\n  } else if (key instanceof Uint8Array) {\n    return {\n      kty: 'oct',\n      k: base64url(key)\n    };\n  } else {\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n  }\n  if (keyObject.type !== 'secret' && !['rsa', 'ec', 'ed25519', 'x25519', 'ed448', 'x448'].includes(keyObject.asymmetricKeyType)) {\n    throw new JOSENotSupported('Unsupported key asymmetricKeyType');\n  }\n  return keyObject.export({\n    format: 'jwk'\n  });\n};\nexport default keyToJWK;", "import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n  return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n  return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n  return keyToJWK(key);\n}", "import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n  let encryptedKey;\n  let parameters;\n  let cek;\n  checkKeyType(alg, key, 'encrypt');\n  key = (await normalize.normalizePublicKey?.(key, alg)) || key;\n  switch (alg) {\n    case 'dir':\n      {\n        cek = key;\n        break;\n      }\n    case 'ECDH-ES':\n    case 'ECDH-ES+A128KW':\n    case 'ECDH-ES+A192KW':\n    case 'ECDH-ES+A256KW':\n      {\n        if (!ECDH.ecdhAllowed(key)) {\n          throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n        }\n        const {\n          apu,\n          apv\n        } = providedParameters;\n        let {\n          epk: ephemeralKey\n        } = providedParameters;\n        ephemeralKey ||= (await ECDH.generateEpk(key)).privateKey;\n        const {\n          x,\n          y,\n          crv,\n          kty\n        } = await exportJWK(ephemeralKey);\n        const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n        parameters = {\n          epk: {\n            x,\n            crv,\n            kty\n          }\n        };\n        if (kty === 'EC') parameters.epk.y = y;\n        if (apu) parameters.apu = base64url(apu);\n        if (apv) parameters.apv = base64url(apv);\n        if (alg === 'ECDH-ES') {\n          cek = sharedSecret;\n          break;\n        }\n        cek = providedCek || generateCek(enc);\n        const kwAlg = alg.slice(-6);\n        encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n        break;\n      }\n    case 'RSA1_5':\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      {\n        cek = providedCek || generateCek(enc);\n        encryptedKey = await rsaEs(alg, key, cek);\n        break;\n      }\n    case 'PBES2-HS256+A128KW':\n    case 'PBES2-HS384+A192KW':\n    case 'PBES2-HS512+A256KW':\n      {\n        cek = providedCek || generateCek(enc);\n        const {\n          p2c,\n          p2s\n        } = providedParameters;\n        ({\n          encryptedKey,\n          ...parameters\n        } = await pbes2Kw(alg, key, cek, p2c, p2s));\n        break;\n      }\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n      {\n        cek = providedCek || generateCek(enc);\n        encryptedKey = await aesKw(alg, key, cek);\n        break;\n      }\n    case 'A128GCMKW':\n    case 'A192GCMKW':\n    case 'A256GCMKW':\n      {\n        cek = providedCek || generateCek(enc);\n        const {\n          iv\n        } = providedParameters;\n        ({\n          encryptedKey,\n          ...parameters\n        } = await aesGcmKw(alg, key, cek, iv));\n        break;\n      }\n    default:\n      {\n        throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n      }\n  }\n  return {\n    cek,\n    encryptedKey,\n    parameters\n  };\n}\nexport default encryptKeyManagement;", "import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n  _plaintext;\n  _protectedHeader;\n  _sharedUnprotectedHeader;\n  _unprotectedHeader;\n  _aad;\n  _cek;\n  _iv;\n  _keyManagementParameters;\n  constructor(plaintext) {\n    if (!(plaintext instanceof Uint8Array)) {\n      throw new TypeError('plaintext must be an instance of Uint8Array');\n    }\n    this._plaintext = plaintext;\n  }\n  setKeyManagementParameters(parameters) {\n    if (this._keyManagementParameters) {\n      throw new TypeError('setKeyManagementParameters can only be called once');\n    }\n    this._keyManagementParameters = parameters;\n    return this;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n    if (this._sharedUnprotectedHeader) {\n      throw new TypeError('setSharedUnprotectedHeader can only be called once');\n    }\n    this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n    return this;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this._unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this._unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  setAdditionalAuthenticatedData(aad) {\n    this._aad = aad;\n    return this;\n  }\n  setContentEncryptionKey(cek) {\n    if (this._cek) {\n      throw new TypeError('setContentEncryptionKey can only be called once');\n    }\n    this._cek = cek;\n    return this;\n  }\n  setInitializationVector(iv) {\n    if (this._iv) {\n      throw new TypeError('setInitializationVector can only be called once');\n    }\n    this._iv = iv;\n    return this;\n  }\n  async encrypt(key, options) {\n    if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n      throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n    }\n    if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n      throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n      ...this._protectedHeader,\n      ...this._unprotectedHeader,\n      ...this._sharedUnprotectedHeader\n    };\n    validateCrit(JWEInvalid, new Map(), options?.crit, this._protectedHeader, joseHeader);\n    if (joseHeader.zip !== undefined) {\n      throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n    }\n    const {\n      alg,\n      enc\n    } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n      throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    if (typeof enc !== 'string' || !enc) {\n      throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n    }\n    let encryptedKey;\n    if (this._cek && (alg === 'dir' || alg === 'ECDH-ES')) {\n      throw new TypeError(`setContentEncryptionKey cannot be called with JWE \"alg\" (Algorithm) Header ${alg}`);\n    }\n    let cek;\n    {\n      let parameters;\n      ({\n        cek,\n        encryptedKey,\n        parameters\n      } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n      if (parameters) {\n        if (options && unprotected in options) {\n          if (!this._unprotectedHeader) {\n            this.setUnprotectedHeader(parameters);\n          } else {\n            this._unprotectedHeader = {\n              ...this._unprotectedHeader,\n              ...parameters\n            };\n          }\n        } else if (!this._protectedHeader) {\n          this.setProtectedHeader(parameters);\n        } else {\n          this._protectedHeader = {\n            ...this._protectedHeader,\n            ...parameters\n          };\n        }\n      }\n    }\n    let additionalData;\n    let protectedHeader;\n    let aadMember;\n    if (this._protectedHeader) {\n      protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n    } else {\n      protectedHeader = encoder.encode('');\n    }\n    if (this._aad) {\n      aadMember = base64url(this._aad);\n      additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n    } else {\n      additionalData = protectedHeader;\n    }\n    const {\n      ciphertext,\n      tag,\n      iv\n    } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData);\n    const jwe = {\n      ciphertext: base64url(ciphertext)\n    };\n    if (iv) {\n      jwe.iv = base64url(iv);\n    }\n    if (tag) {\n      jwe.tag = base64url(tag);\n    }\n    if (encryptedKey) {\n      jwe.encrypted_key = base64url(encryptedKey);\n    }\n    if (aadMember) {\n      jwe.aad = aadMember;\n    }\n    if (this._protectedHeader) {\n      jwe.protected = decoder.decode(protectedHeader);\n    }\n    if (this._sharedUnprotectedHeader) {\n      jwe.unprotected = this._sharedUnprotectedHeader;\n    }\n    if (this._unprotectedHeader) {\n      jwe.header = this._unprotectedHeader;\n    }\n    return jwe;\n  }\n}", "import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n  parent;\n  unprotectedHeader;\n  key;\n  options;\n  constructor(enc, key, options) {\n    this.parent = enc;\n    this.key = key;\n    this.options = options;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this.unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this.unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  addRecipient(...args) {\n    return this.parent.addRecipient(...args);\n  }\n  encrypt(...args) {\n    return this.parent.encrypt(...args);\n  }\n  done() {\n    return this.parent;\n  }\n}\nexport class GeneralEncrypt {\n  _plaintext;\n  _recipients = [];\n  _protectedHeader;\n  _unprotectedHeader;\n  _aad;\n  constructor(plaintext) {\n    this._plaintext = plaintext;\n  }\n  addRecipient(key, options) {\n    const recipient = new IndividualRecipient(this, key, {\n      crit: options?.crit\n    });\n    this._recipients.push(recipient);\n    return recipient;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n    if (this._unprotectedHeader) {\n      throw new TypeError('setSharedUnprotectedHeader can only be called once');\n    }\n    this._unprotectedHeader = sharedUnprotectedHeader;\n    return this;\n  }\n  setAdditionalAuthenticatedData(aad) {\n    this._aad = aad;\n    return this;\n  }\n  async encrypt() {\n    if (!this._recipients.length) {\n      throw new JWEInvalid('at least one recipient must be added');\n    }\n    if (this._recipients.length === 1) {\n      const [recipient] = this._recipients;\n      const flattened = await new FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).encrypt(recipient.key, {\n        ...recipient.options\n      });\n      const jwe = {\n        ciphertext: flattened.ciphertext,\n        iv: flattened.iv,\n        recipients: [{}],\n        tag: flattened.tag\n      };\n      if (flattened.aad) jwe.aad = flattened.aad;\n      if (flattened.protected) jwe.protected = flattened.protected;\n      if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n      if (flattened.encrypted_key) jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n      if (flattened.header) jwe.recipients[0].header = flattened.header;\n      return jwe;\n    }\n    let enc;\n    for (let i = 0; i < this._recipients.length; i++) {\n      const recipient = this._recipients[i];\n      if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n        throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n      }\n      const joseHeader = {\n        ...this._protectedHeader,\n        ...this._unprotectedHeader,\n        ...recipient.unprotectedHeader\n      };\n      const {\n        alg\n      } = joseHeader;\n      if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n      }\n      if (alg === 'dir' || alg === 'ECDH-ES') {\n        throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n      }\n      if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n        throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n      }\n      if (!enc) {\n        enc = joseHeader.enc;\n      } else if (enc !== joseHeader.enc) {\n        throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n      }\n      validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n      if (joseHeader.zip !== undefined) {\n        throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n      }\n    }\n    const cek = generateCek(enc);\n    const jwe = {\n      ciphertext: '',\n      iv: '',\n      recipients: [],\n      tag: ''\n    };\n    for (let i = 0; i < this._recipients.length; i++) {\n      const recipient = this._recipients[i];\n      const target = {};\n      jwe.recipients.push(target);\n      const joseHeader = {\n        ...this._protectedHeader,\n        ...this._unprotectedHeader,\n        ...recipient.unprotectedHeader\n      };\n      const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n      if (i === 0) {\n        const flattened = await new FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(cek).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).setKeyManagementParameters({\n          p2c\n        }).encrypt(recipient.key, {\n          ...recipient.options,\n          [unprotected]: true\n        });\n        jwe.ciphertext = flattened.ciphertext;\n        jwe.iv = flattened.iv;\n        jwe.tag = flattened.tag;\n        if (flattened.aad) jwe.aad = flattened.aad;\n        if (flattened.protected) jwe.protected = flattened.protected;\n        if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n        target.encrypted_key = flattened.encrypted_key;\n        if (flattened.header) target.header = flattened.header;\n        continue;\n      }\n      const {\n        encryptedKey,\n        parameters\n      } = await encryptKeyManagement(recipient.unprotectedHeader?.alg || this._protectedHeader?.alg || this._unprotectedHeader?.alg, enc, recipient.key, cek, {\n        p2c\n      });\n      target.encrypted_key = base64url(encryptedKey);\n      if (recipient.unprotectedHeader || parameters) target.header = {\n        ...recipient.unprotectedHeader,\n        ...parameters\n      };\n    }\n    return jwe;\n  }\n}", "import * as crypto from 'node:crypto';\nimport { promisify } from 'node:util';\nimport nodeDigest from './dsa_digest.js';\nimport nodeKey from './node_key.js';\nimport sign from './sign.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst oneShotVerify = promisify(crypto.verify);\nconst verify = async (alg, key, signature, data) => {\n  const keyObject = getVerifyKey(alg, key, 'verify');\n  if (alg.startsWith('HS')) {\n    const expected = await sign(alg, keyObject, data);\n    const actual = signature;\n    try {\n      return crypto.timingSafeEqual(actual, expected);\n    } catch {\n      return false;\n    }\n  }\n  const algorithm = nodeDigest(alg);\n  const keyInput = nodeKey(alg, keyObject);\n  try {\n    return await oneShotVerify(algorithm, data, keyInput, signature);\n  } catch {\n    return false;\n  }\n};\nexport default verify;", "import { JOSENotSupported } from '../util/errors.js';\nexport default function dsaDigest(alg) {\n  switch (alg) {\n    case 'PS256':\n    case 'RS256':\n    case 'ES256':\n    case 'ES256K':\n      return 'sha256';\n    case 'PS384':\n    case 'RS384':\n    case 'ES384':\n      return 'sha384';\n    case 'PS512':\n    case 'RS512':\n    case 'ES512':\n      return 'sha512';\n    case 'EdDSA':\n      return undefined;\n    default:\n      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n}", "import { constants } from 'node:crypto';\nimport getNamedCurve from './get_named_curve.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport checkKeyLength from './check_key_length.js';\nconst PSS = {\n  padding: constants.RSA_PKCS1_PSS_PADDING,\n  saltLength: constants.RSA_PSS_SALTLEN_DIGEST\n};\nconst ecCurveAlgMap = new Map([['ES256', 'P-256'], ['ES256K', 'secp256k1'], ['ES384', 'P-384'], ['ES512', 'P-521']]);\nexport default function keyForCrypto(alg, key) {\n  switch (alg) {\n    case 'EdDSA':\n      if (!['ed25519', 'ed448'].includes(key.asymmetricKeyType)) {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448');\n      }\n      return key;\n    case 'RS256':\n    case 'RS384':\n    case 'RS512':\n      if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n      }\n      checkKeyLength(key, alg);\n      return key;\n    case 'PS256':\n    case 'PS384':\n    case 'PS512':\n      if (key.asymmetricKeyType === 'rsa-pss') {\n        const {\n          hashAlgorithm,\n          mgf1HashAlgorithm,\n          saltLength\n        } = key.asymmetricKeyDetails;\n        const length = parseInt(alg.slice(-3), 10);\n        if (hashAlgorithm !== undefined && (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n          throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n        }\n        if (saltLength !== undefined && saltLength > length >> 3) {\n          throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n        }\n      } else if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss');\n      }\n      checkKeyLength(key, alg);\n      return {\n        key,\n        ...PSS\n      };\n    case 'ES256':\n    case 'ES256K':\n    case 'ES384':\n    case 'ES512':\n      {\n        if (key.asymmetricKeyType !== 'ec') {\n          throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ec');\n        }\n        const actual = getNamedCurve(key);\n        const expected = ecCurveAlgMap.get(alg);\n        if (actual !== expected) {\n          throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n        }\n        return {\n          dsaEncoding: 'ieee-p1363',\n          key\n        };\n      }\n    default:\n      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n}", "import * as crypto from 'node:crypto';\nimport { promisify } from 'node:util';\nimport nodeDigest from './dsa_digest.js';\nimport hmacDigest from './hmac_digest.js';\nimport nodeKey from './node_key.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst oneShotSign = promisify(crypto.sign);\nconst sign = async (alg, key, data) => {\n  const keyObject = getSignKey(alg, key, 'sign');\n  if (alg.startsWith('HS')) {\n    const hmac = crypto.createHmac(hmacDigest(alg), keyObject);\n    hmac.update(data);\n    return hmac.digest();\n  }\n  return oneShotSign(nodeDigest(alg), data, nodeKey(alg, keyObject));\n};\nexport default sign;", "import { JOSENotSupported } from '../util/errors.js';\nexport default function hmacDigest(alg) {\n  switch (alg) {\n    case 'HS256':\n      return 'sha256';\n    case 'HS384':\n      return 'sha384';\n    case 'HS512':\n      return 'sha512';\n    default:\n      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n}", "import { KeyObject, createSecretKey } from 'node:crypto';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getSignVerifyKey(alg, key, usage) {\n  if (key instanceof Uint8Array) {\n    if (!alg.startsWith('HS')) {\n      throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return createSecretKey(key);\n  }\n  if (key instanceof KeyObject) {\n    return key;\n  }\n  if (isCryptoKey(key)) {\n    checkSigCryptoKey(key, alg, usage);\n    return KeyObject.from(key);\n  }\n  throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n  if (!isObject(jws)) {\n    throw new JWSInvalid('Flattened JWS must be an object');\n  }\n  if (jws.protected === undefined && jws.header === undefined) {\n    throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n  }\n  if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n    throw new JWSInvalid('JWS Protected Header incorrect type');\n  }\n  if (jws.payload === undefined) {\n    throw new JWSInvalid('JWS Payload missing');\n  }\n  if (typeof jws.signature !== 'string') {\n    throw new JWSInvalid('JWS Signature missing or incorrect type');\n  }\n  if (jws.header !== undefined && !isObject(jws.header)) {\n    throw new JWSInvalid('JWS Unprotected Header incorrect type');\n  }\n  let parsedProt = {};\n  if (jws.protected) {\n    try {\n      const protectedHeader = base64url(jws.protected);\n      parsedProt = JSON.parse(decoder.decode(protectedHeader));\n    } catch {\n      throw new JWSInvalid('JWS Protected Header is invalid');\n    }\n  }\n  if (!isDisjoint(parsedProt, jws.header)) {\n    throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n  }\n  const joseHeader = {\n    ...parsedProt,\n    ...jws.header\n  };\n  const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n  let b64 = true;\n  if (extensions.has('b64')) {\n    b64 = parsedProt.b64;\n    if (typeof b64 !== 'boolean') {\n      throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n    }\n  }\n  const {\n    alg\n  } = joseHeader;\n  if (typeof alg !== 'string' || !alg) {\n    throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n  }\n  const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n  if (algorithms && !algorithms.has(alg)) {\n    throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n  }\n  if (b64) {\n    if (typeof jws.payload !== 'string') {\n      throw new JWSInvalid('JWS Payload must be a string');\n    }\n  } else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n    throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n  }\n  let resolvedKey = false;\n  if (typeof key === 'function') {\n    key = await key(parsedProt, jws);\n    resolvedKey = true;\n  }\n  checkKeyType(alg, key, 'verify');\n  const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n  let signature;\n  try {\n    signature = base64url(jws.signature);\n  } catch {\n    throw new JWSInvalid('Failed to base64url decode the signature');\n  }\n  const verified = await verify(alg, key, signature, data);\n  if (!verified) {\n    throw new JWSSignatureVerificationFailed();\n  }\n  let payload;\n  if (b64) {\n    try {\n      payload = base64url(jws.payload);\n    } catch {\n      throw new JWSInvalid('Failed to base64url decode the payload');\n    }\n  } else if (typeof jws.payload === 'string') {\n    payload = encoder.encode(jws.payload);\n  } else {\n    payload = jws.payload;\n  }\n  const result = {\n    payload\n  };\n  if (jws.protected !== undefined) {\n    result.protectedHeader = parsedProt;\n  }\n  if (jws.header !== undefined) {\n    result.unprotectedHeader = jws.header;\n  }\n  if (resolvedKey) {\n    return {\n      ...result,\n      key\n    };\n  }\n  return result;\n}", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n  if (jws instanceof Uint8Array) {\n    jws = decoder.decode(jws);\n  }\n  if (typeof jws !== 'string') {\n    throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n  }\n  const {\n    0: protectedHeader,\n    1: payload,\n    2: signature,\n    length\n  } = jws.split('.');\n  if (length !== 3) {\n    throw new JWSInvalid('Invalid Compact JWS');\n  }\n  const verified = await flattenedVerify({\n    payload,\n    protected: protectedHeader,\n    signature\n  }, key, options);\n  const result = {\n    payload: verified.payload,\n    protectedHeader: verified.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return {\n      ...result,\n      key: verified.key\n    };\n  }\n  return result;\n}", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n  if (!isObject(jws)) {\n    throw new JWSInvalid('General JWS must be an object');\n  }\n  if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n    throw new JWSInvalid('JWS Signatures missing or incorrect type');\n  }\n  for (const signature of jws.signatures) {\n    try {\n      return await flattenedVerify({\n        header: signature.header,\n        payload: jws.payload,\n        protected: signature.protected,\n        signature: signature.signature\n      }, key, options);\n    } catch {}\n  }\n  throw new JWSSignatureVerificationFailed();\n}", "export default (date => Math.floor(date.getTime() / 1000));", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str => {\n  const matched = REGEX.exec(str);\n  if (!matched || matched[4] && matched[1]) {\n    throw new TypeError('Invalid time period format');\n  }\n  const value = parseFloat(matched[2]);\n  const unit = matched[3].toLowerCase();\n  let numericDate;\n  switch (unit) {\n    case 'sec':\n    case 'secs':\n    case 'second':\n    case 'seconds':\n    case 's':\n      numericDate = Math.round(value);\n      break;\n    case 'minute':\n    case 'minutes':\n    case 'min':\n    case 'mins':\n    case 'm':\n      numericDate = Math.round(value * minute);\n      break;\n    case 'hour':\n    case 'hours':\n    case 'hr':\n    case 'hrs':\n    case 'h':\n      numericDate = Math.round(value * hour);\n      break;\n    case 'day':\n    case 'days':\n    case 'd':\n      numericDate = Math.round(value * day);\n      break;\n    case 'week':\n    case 'weeks':\n    case 'w':\n      numericDate = Math.round(value * week);\n      break;\n    default:\n      numericDate = Math.round(value * year);\n      break;\n  }\n  if (matched[1] === '-' || matched[4] === 'ago') {\n    return -numericDate;\n  }\n  return numericDate;\n});", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = value => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n  if (typeof audPayload === 'string') {\n    return audOption.includes(audPayload);\n  }\n  if (Array.isArray(audPayload)) {\n    return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n  }\n  return false;\n};\nexport default ((protectedHeader, encodedPayload, options = {}) => {\n  let payload;\n  try {\n    payload = JSON.parse(decoder.decode(encodedPayload));\n  } catch {}\n  if (!isObject(payload)) {\n    throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n  }\n  const {\n    typ\n  } = options;\n  if (typ && (typeof protectedHeader.typ !== 'string' || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n    throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n  }\n  const {\n    requiredClaims = [],\n    issuer,\n    subject,\n    audience,\n    maxTokenAge\n  } = options;\n  const presenceCheck = [...requiredClaims];\n  if (maxTokenAge !== undefined) presenceCheck.push('iat');\n  if (audience !== undefined) presenceCheck.push('aud');\n  if (subject !== undefined) presenceCheck.push('sub');\n  if (issuer !== undefined) presenceCheck.push('iss');\n  for (const claim of new Set(presenceCheck.reverse())) {\n    if (!(claim in payload)) {\n      throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n    }\n  }\n  if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n    throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n  }\n  if (subject && payload.sub !== subject) {\n    throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n  }\n  if (audience && !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n    throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n  }\n  let tolerance;\n  switch (typeof options.clockTolerance) {\n    case 'string':\n      tolerance = secs(options.clockTolerance);\n      break;\n    case 'number':\n      tolerance = options.clockTolerance;\n      break;\n    case 'undefined':\n      tolerance = 0;\n      break;\n    default:\n      throw new TypeError('Invalid clockTolerance option type');\n  }\n  const {\n    currentDate\n  } = options;\n  const now = epoch(currentDate || new Date());\n  if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n    throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n  }\n  if (payload.nbf !== undefined) {\n    if (typeof payload.nbf !== 'number') {\n      throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n    }\n    if (payload.nbf > now + tolerance) {\n      throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n    }\n  }\n  if (payload.exp !== undefined) {\n    if (typeof payload.exp !== 'number') {\n      throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n    }\n    if (payload.exp <= now - tolerance) {\n      throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n    }\n  }\n  if (maxTokenAge) {\n    const age = now - payload.iat;\n    const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n    if (age - tolerance > max) {\n      throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n    }\n    if (age < 0 - tolerance) {\n      throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n    }\n  }\n  return payload;\n});", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n  const verified = await compactVerify(jwt, key, options);\n  if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n    throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n  }\n  const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n  const result = {\n    payload,\n    protectedHeader: verified.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return {\n      ...result,\n      key: verified.key\n    };\n  }\n  return result;\n}", "import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n  const decrypted = await compactDecrypt(jwt, key, options);\n  const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n  const {\n    protectedHeader\n  } = decrypted;\n  if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n    throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', payload, 'iss', 'mismatch');\n  }\n  if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n    throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', payload, 'sub', 'mismatch');\n  }\n  if (protectedHeader.aud !== undefined && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n    throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', payload, 'aud', 'mismatch');\n  }\n  const result = {\n    payload,\n    protectedHeader\n  };\n  if (typeof key === 'function') {\n    return {\n      ...result,\n      key: decrypted.key\n    };\n  }\n  return result;\n}", "import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n  _flattened;\n  constructor(plaintext) {\n    this._flattened = new FlattenedEncrypt(plaintext);\n  }\n  setContentEncryptionKey(cek) {\n    this._flattened.setContentEncryptionKey(cek);\n    return this;\n  }\n  setInitializationVector(iv) {\n    this._flattened.setInitializationVector(iv);\n    return this;\n  }\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n    return this;\n  }\n  setKeyManagementParameters(parameters) {\n    this._flattened.setKeyManagementParameters(parameters);\n    return this;\n  }\n  async encrypt(key, options) {\n    const jwe = await this._flattened.encrypt(key, options);\n    return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n  }\n}", "import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n  _payload;\n  _protectedHeader;\n  _unprotectedHeader;\n  constructor(payload) {\n    if (!(payload instanceof Uint8Array)) {\n      throw new TypeError('payload must be an instance of Uint8Array');\n    }\n    this._payload = payload;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this._unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this._unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  async sign(key, options) {\n    if (!this._protectedHeader && !this._unprotectedHeader) {\n      throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n    }\n    if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n      throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n      ...this._protectedHeader,\n      ...this._unprotectedHeader\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this._protectedHeader, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n      b64 = this._protectedHeader.b64;\n      if (typeof b64 !== 'boolean') {\n        throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n      }\n    }\n    const {\n      alg\n    } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n      throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    checkKeyType(alg, key, 'sign');\n    let payload = this._payload;\n    if (b64) {\n      payload = encoder.encode(base64url(payload));\n    }\n    let protectedHeader;\n    if (this._protectedHeader) {\n      protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n    } else {\n      protectedHeader = encoder.encode('');\n    }\n    const data = concat(protectedHeader, encoder.encode('.'), payload);\n    const signature = await sign(alg, key, data);\n    const jws = {\n      signature: base64url(signature),\n      payload: ''\n    };\n    if (b64) {\n      jws.payload = decoder.decode(payload);\n    }\n    if (this._unprotectedHeader) {\n      jws.header = this._unprotectedHeader;\n    }\n    if (this._protectedHeader) {\n      jws.protected = decoder.decode(protectedHeader);\n    }\n    return jws;\n  }\n}", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n  _flattened;\n  constructor(payload) {\n    this._flattened = new FlattenedSign(payload);\n  }\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n    return this;\n  }\n  async sign(key, options) {\n    const jws = await this._flattened.sign(key, options);\n    if (jws.payload === undefined) {\n      throw new TypeError('use the flattened module for creating JWS with b64: false');\n    }\n    return `${jws.protected}.${jws.payload}.${jws.signature}`;\n  }\n}", "import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n  parent;\n  protectedHeader;\n  unprotectedHeader;\n  options;\n  key;\n  constructor(sig, key, options) {\n    this.parent = sig;\n    this.key = key;\n    this.options = options;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this.protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this.protectedHeader = protectedHeader;\n    return this;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this.unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this.unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  addSignature(...args) {\n    return this.parent.addSignature(...args);\n  }\n  sign(...args) {\n    return this.parent.sign(...args);\n  }\n  done() {\n    return this.parent;\n  }\n}\nexport class GeneralSign {\n  _payload;\n  _signatures = [];\n  constructor(payload) {\n    this._payload = payload;\n  }\n  addSignature(key, options) {\n    const signature = new IndividualSignature(this, key, options);\n    this._signatures.push(signature);\n    return signature;\n  }\n  async sign() {\n    if (!this._signatures.length) {\n      throw new JWSInvalid('at least one signature must be added');\n    }\n    const jws = {\n      signatures: [],\n      payload: ''\n    };\n    for (let i = 0; i < this._signatures.length; i++) {\n      const signature = this._signatures[i];\n      const flattened = new FlattenedSign(this._payload);\n      flattened.setProtectedHeader(signature.protectedHeader);\n      flattened.setUnprotectedHeader(signature.unprotectedHeader);\n      const {\n        payload,\n        ...rest\n      } = await flattened.sign(signature.key, signature.options);\n      if (i === 0) {\n        jws.payload = payload;\n      } else if (jws.payload !== payload) {\n        throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n      }\n      jws.signatures.push(rest);\n    }\n    return jws;\n  }\n}", "import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nfunction validateInput(label, input) {\n  if (!Number.isFinite(input)) {\n    throw new TypeError(`Invalid ${label} input`);\n  }\n  return input;\n}\nexport class ProduceJWT {\n  _payload;\n  constructor(payload = {}) {\n    if (!isObject(payload)) {\n      throw new TypeError('JWT Claims Set MUST be an object');\n    }\n    this._payload = payload;\n  }\n  setIssuer(issuer) {\n    this._payload = {\n      ...this._payload,\n      iss: issuer\n    };\n    return this;\n  }\n  setSubject(subject) {\n    this._payload = {\n      ...this._payload,\n      sub: subject\n    };\n    return this;\n  }\n  setAudience(audience) {\n    this._payload = {\n      ...this._payload,\n      aud: audience\n    };\n    return this;\n  }\n  setJti(jwtId) {\n    this._payload = {\n      ...this._payload,\n      jti: jwtId\n    };\n    return this;\n  }\n  setNotBefore(input) {\n    if (typeof input === 'number') {\n      this._payload = {\n        ...this._payload,\n        nbf: validateInput('setNotBefore', input)\n      };\n    } else if (input instanceof Date) {\n      this._payload = {\n        ...this._payload,\n        nbf: validateInput('setNotBefore', epoch(input))\n      };\n    } else {\n      this._payload = {\n        ...this._payload,\n        nbf: epoch(new Date()) + secs(input)\n      };\n    }\n    return this;\n  }\n  setExpirationTime(input) {\n    if (typeof input === 'number') {\n      this._payload = {\n        ...this._payload,\n        exp: validateInput('setExpirationTime', input)\n      };\n    } else if (input instanceof Date) {\n      this._payload = {\n        ...this._payload,\n        exp: validateInput('setExpirationTime', epoch(input))\n      };\n    } else {\n      this._payload = {\n        ...this._payload,\n        exp: epoch(new Date()) + secs(input)\n      };\n    }\n    return this;\n  }\n  setIssuedAt(input) {\n    if (typeof input === 'undefined') {\n      this._payload = {\n        ...this._payload,\n        iat: epoch(new Date())\n      };\n    } else if (input instanceof Date) {\n      this._payload = {\n        ...this._payload,\n        iat: validateInput('setIssuedAt', epoch(input))\n      };\n    } else if (typeof input === 'string') {\n      this._payload = {\n        ...this._payload,\n        iat: validateInput('setIssuedAt', epoch(new Date()) + secs(input))\n      };\n    } else {\n      this._payload = {\n        ...this._payload,\n        iat: validateInput('setIssuedAt', input)\n      };\n    }\n    return this;\n  }\n}", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n  _protectedHeader;\n  setProtectedHeader(protectedHeader) {\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  async sign(key, options) {\n    const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n    sig.setProtectedHeader(this._protectedHeader);\n    if (Array.isArray(this._protectedHeader?.crit) && this._protectedHeader.crit.includes('b64') && this._protectedHeader.b64 === false) {\n      throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    return sig.sign(key, options);\n  }\n}", "import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n  _cek;\n  _iv;\n  _keyManagementParameters;\n  _protectedHeader;\n  _replicateIssuerAsHeader;\n  _replicateSubjectAsHeader;\n  _replicateAudienceAsHeader;\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setKeyManagementParameters(parameters) {\n    if (this._keyManagementParameters) {\n      throw new TypeError('setKeyManagementParameters can only be called once');\n    }\n    this._keyManagementParameters = parameters;\n    return this;\n  }\n  setContentEncryptionKey(cek) {\n    if (this._cek) {\n      throw new TypeError('setContentEncryptionKey can only be called once');\n    }\n    this._cek = cek;\n    return this;\n  }\n  setInitializationVector(iv) {\n    if (this._iv) {\n      throw new TypeError('setInitializationVector can only be called once');\n    }\n    this._iv = iv;\n    return this;\n  }\n  replicateIssuerAsHeader() {\n    this._replicateIssuerAsHeader = true;\n    return this;\n  }\n  replicateSubjectAsHeader() {\n    this._replicateSubjectAsHeader = true;\n    return this;\n  }\n  replicateAudienceAsHeader() {\n    this._replicateAudienceAsHeader = true;\n    return this;\n  }\n  async encrypt(key, options) {\n    const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n    if (this._replicateIssuerAsHeader) {\n      this._protectedHeader = {\n        ...this._protectedHeader,\n        iss: this._payload.iss\n      };\n    }\n    if (this._replicateSubjectAsHeader) {\n      this._protectedHeader = {\n        ...this._protectedHeader,\n        sub: this._payload.sub\n      };\n    }\n    if (this._replicateAudienceAsHeader) {\n      this._protectedHeader = {\n        ...this._protectedHeader,\n        aud: this._payload.aud\n      };\n    }\n    enc.setProtectedHeader(this._protectedHeader);\n    if (this._iv) {\n      enc.setInitializationVector(this._iv);\n    }\n    if (this._cek) {\n      enc.setContentEncryptionKey(this._cek);\n    }\n    if (this._keyManagementParameters) {\n      enc.setKeyManagementParameters(this._keyManagementParameters);\n    }\n    return enc.encrypt(key, options);\n  }\n}", "import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n  if (typeof value !== 'string' || !value) {\n    throw new JWKInvalid(`${description} missing or invalid`);\n  }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n  if (!isObject(jwk)) {\n    throw new TypeError('JWK must be an object');\n  }\n  digestAlgorithm ??= 'sha256';\n  if (digestAlgorithm !== 'sha256' && digestAlgorithm !== 'sha384' && digestAlgorithm !== 'sha512') {\n    throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n  }\n  let components;\n  switch (jwk.kty) {\n    case 'EC':\n      check(jwk.crv, '\"crv\" (Curve) Parameter');\n      check(jwk.x, '\"x\" (X Coordinate) Parameter');\n      check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x,\n        y: jwk.y\n      };\n      break;\n    case 'OKP':\n      check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n      check(jwk.x, '\"x\" (Public Key) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x\n      };\n      break;\n    case 'RSA':\n      check(jwk.e, '\"e\" (Exponent) Parameter');\n      check(jwk.n, '\"n\" (Modulus) Parameter');\n      components = {\n        e: jwk.e,\n        kty: jwk.kty,\n        n: jwk.n\n      };\n      break;\n    case 'oct':\n      check(jwk.k, '\"k\" (Key Value) Parameter');\n      components = {\n        k: jwk.k,\n        kty: jwk.kty\n      };\n      break;\n    default:\n      throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n  }\n  const data = encoder.encode(JSON.stringify(components));\n  return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n  digestAlgorithm ??= 'sha256';\n  const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n  return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}", "import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n  const joseHeader = {\n    ...protectedHeader,\n    ...token?.header\n  };\n  if (!isObject(joseHeader.jwk)) {\n    throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n  }\n  const key = await importJWK({\n    ...joseHeader.jwk,\n    ext: true\n  }, joseHeader.alg);\n  if (key instanceof Uint8Array || key.type !== 'public') {\n    throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n  }\n  return key;\n}", "import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n  switch (typeof alg === 'string' && alg.slice(0, 2)) {\n    case 'RS':\n    case 'PS':\n      return 'RSA';\n    case 'ES':\n      return 'EC';\n    case 'Ed':\n      return 'OKP';\n    default:\n      throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n  }\n}\nfunction isJWKSLike(jwks) {\n  return jwks && typeof jwks === 'object' && Array.isArray(jwks.keys) && jwks.keys.every(isJWKLike);\n}\nfunction isJWKLike(key) {\n  return isObject(key);\n}\nfunction clone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n  _jwks;\n  _cached = new WeakMap();\n  constructor(jwks) {\n    if (!isJWKSLike(jwks)) {\n      throw new JWKSInvalid('JSON Web Key Set malformed');\n    }\n    this._jwks = clone(jwks);\n  }\n  async getKey(protectedHeader, token) {\n    const {\n      alg,\n      kid\n    } = {\n      ...protectedHeader,\n      ...token?.header\n    };\n    const kty = getKtyFromAlg(alg);\n    const candidates = this._jwks.keys.filter(jwk => {\n      let candidate = kty === jwk.kty;\n      if (candidate && typeof kid === 'string') {\n        candidate = kid === jwk.kid;\n      }\n      if (candidate && typeof jwk.alg === 'string') {\n        candidate = alg === jwk.alg;\n      }\n      if (candidate && typeof jwk.use === 'string') {\n        candidate = jwk.use === 'sig';\n      }\n      if (candidate && Array.isArray(jwk.key_ops)) {\n        candidate = jwk.key_ops.includes('verify');\n      }\n      if (candidate && alg === 'EdDSA') {\n        candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n      }\n      if (candidate) {\n        switch (alg) {\n          case 'ES256':\n            candidate = jwk.crv === 'P-256';\n            break;\n          case 'ES256K':\n            candidate = jwk.crv === 'secp256k1';\n            break;\n          case 'ES384':\n            candidate = jwk.crv === 'P-384';\n            break;\n          case 'ES512':\n            candidate = jwk.crv === 'P-521';\n            break;\n        }\n      }\n      return candidate;\n    });\n    const {\n      0: jwk,\n      length\n    } = candidates;\n    if (length === 0) {\n      throw new JWKSNoMatchingKey();\n    }\n    if (length !== 1) {\n      const error = new JWKSMultipleMatchingKeys();\n      const {\n        _cached\n      } = this;\n      error[Symbol.asyncIterator] = async function* () {\n        for (const jwk of candidates) {\n          try {\n            yield await importWithAlgCache(_cached, jwk, alg);\n          } catch {}\n        }\n      };\n      throw error;\n    }\n    return importWithAlgCache(this._cached, jwk, alg);\n  }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n  const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n  if (cached[alg] === undefined) {\n    const key = await importJWK({\n      ...jwk,\n      ext: true\n    }, alg);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n      throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n    }\n    cached[alg] = key;\n  }\n  return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n  const set = new LocalJWKSet(jwks);\n  const localJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n  Object.defineProperties(localJWKSet, {\n    jwks: {\n      value: () => clone(set._jwks),\n      enumerable: true,\n      configurable: false,\n      writable: false\n    }\n  });\n  return localJWKSet;\n}", "import * as http from 'node:http';\nimport * as https from 'node:https';\nimport { once } from 'node:events';\nimport { JOSEError, JWKSTimeout } from '../util/errors.js';\nimport { concat, decoder } from '../lib/buffer_utils.js';\nconst fetchJwks = async (url, timeout, options) => {\n  let get;\n  switch (url.protocol) {\n    case 'https:':\n      get = https.get;\n      break;\n    case 'http:':\n      get = http.get;\n      break;\n    default:\n      throw new TypeError('Unsupported URL protocol.');\n  }\n  const {\n    agent,\n    headers\n  } = options;\n  const req = get(url.href, {\n    agent,\n    timeout,\n    headers\n  });\n  const [response] = await Promise.race([once(req, 'response'), once(req, 'timeout')]);\n  if (!response) {\n    req.destroy();\n    throw new JWKSTimeout();\n  }\n  if (response.statusCode !== 200) {\n    throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n  }\n  const parts = [];\n  for await (const part of response) {\n    parts.push(part);\n  }\n  try {\n    return JSON.parse(decoder.decode(concat(...parts)));\n  } catch {\n    throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n  }\n};\nexport default fetchJwks;", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n  return typeof WebSocketPair !== 'undefined' || typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers' || typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel';\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n  const NAME = 'jose';\n  const VERSION = 'v5.6.3';\n  USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const experimental_jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n  if (typeof input !== 'object' || input === null) {\n    return false;\n  }\n  if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n    return false;\n  }\n  if (!('jwks' in input) || !isObject(input.jwks) || !Array.isArray(input.jwks.keys) || !Array.prototype.every.call(input.jwks.keys, isObject)) {\n    return false;\n  }\n  return true;\n}\nclass RemoteJWKSet {\n  _url;\n  _timeoutDuration;\n  _cooldownDuration;\n  _cacheMaxAge;\n  _jwksTimestamp;\n  _pendingFetch;\n  _options;\n  _local;\n  _cache;\n  constructor(url, options) {\n    if (!(url instanceof URL)) {\n      throw new TypeError('url must be an instance of URL');\n    }\n    this._url = new URL(url.href);\n    this._options = {\n      agent: options?.agent,\n      headers: options?.headers\n    };\n    this._timeoutDuration = typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n    this._cooldownDuration = typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n    this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n    if (options?.[experimental_jwksCache] !== undefined) {\n      this._cache = options?.[experimental_jwksCache];\n      if (isFreshJwksCache(options?.[experimental_jwksCache], this._cacheMaxAge)) {\n        this._jwksTimestamp = this._cache.uat;\n        this._local = createLocalJWKSet(this._cache.jwks);\n      }\n    }\n  }\n  coolingDown() {\n    return typeof this._jwksTimestamp === 'number' ? Date.now() < this._jwksTimestamp + this._cooldownDuration : false;\n  }\n  fresh() {\n    return typeof this._jwksTimestamp === 'number' ? Date.now() < this._jwksTimestamp + this._cacheMaxAge : false;\n  }\n  async getKey(protectedHeader, token) {\n    if (!this._local || !this.fresh()) {\n      await this.reload();\n    }\n    try {\n      return await this._local(protectedHeader, token);\n    } catch (err) {\n      if (err instanceof JWKSNoMatchingKey) {\n        if (this.coolingDown() === false) {\n          await this.reload();\n          return this._local(protectedHeader, token);\n        }\n      }\n      throw err;\n    }\n  }\n  async reload() {\n    if (this._pendingFetch && isCloudflareWorkers()) {\n      this._pendingFetch = undefined;\n    }\n    const headers = new Headers(this._options.headers);\n    if (USER_AGENT && !headers.has('User-Agent')) {\n      headers.set('User-Agent', USER_AGENT);\n      this._options.headers = Object.fromEntries(headers.entries());\n    }\n    this._pendingFetch ||= fetchJwks(this._url, this._timeoutDuration, this._options).then(json => {\n      this._local = createLocalJWKSet(json);\n      if (this._cache) {\n        this._cache.uat = Date.now();\n        this._cache.jwks = json;\n      }\n      this._jwksTimestamp = Date.now();\n      this._pendingFetch = undefined;\n    }).catch(err => {\n      this._pendingFetch = undefined;\n      throw err;\n    });\n    await this._pendingFetch;\n  }\n}\nexport function createRemoteJWKSet(url, options) {\n  const set = new RemoteJWKSet(url, options);\n  const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n  Object.defineProperties(remoteJWKSet, {\n    coolingDown: {\n      get: () => set.coolingDown(),\n      enumerable: true,\n      configurable: false\n    },\n    fresh: {\n      get: () => set.fresh(),\n      enumerable: true,\n      configurable: false\n    },\n    reload: {\n      value: () => set.reload(),\n      enumerable: true,\n      configurable: false,\n      writable: false\n    },\n    reloading: {\n      get: () => !!set._pendingFetch,\n      enumerable: true,\n      configurable: false\n    },\n    jwks: {\n      value: () => set._local?.jwks(),\n      enumerable: true,\n      configurable: false,\n      writable: false\n    }\n  });\n  return remoteJWKSet;\n}", "import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n  encode() {\n    const header = base64url.encode(JSON.stringify({\n      alg: 'none'\n    }));\n    const payload = base64url.encode(JSON.stringify(this._payload));\n    return `${header}.${payload}.`;\n  }\n  static decode(jwt, options) {\n    if (typeof jwt !== 'string') {\n      throw new JWTInvalid('Unsecured JWT must be a string');\n    }\n    const {\n      0: encodedHeader,\n      1: encodedPayload,\n      2: signature,\n      length\n    } = jwt.split('.');\n    if (length !== 3 || signature !== '') {\n      throw new JWTInvalid('Invalid Unsecured JWT');\n    }\n    let header;\n    try {\n      header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n      if (header.alg !== 'none') throw new Error();\n    } catch {\n      throw new JWTInvalid('Invalid Unsecured JWT');\n    }\n    const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n    return {\n      payload,\n      header\n    };\n  }\n}", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n  let protectedB64u;\n  if (typeof token === 'string') {\n    const parts = token.split('.');\n    if (parts.length === 3 || parts.length === 5) {\n      ;\n      [protectedB64u] = parts;\n    }\n  } else if (typeof token === 'object' && token) {\n    if ('protected' in token) {\n      protectedB64u = token.protected;\n    } else {\n      throw new TypeError('Token does not contain a Protected Header');\n    }\n  }\n  try {\n    if (typeof protectedB64u !== 'string' || !protectedB64u) {\n      throw new Error();\n    }\n    const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n    if (!isObject(result)) {\n      throw new Error();\n    }\n    return result;\n  } catch {\n    throw new TypeError('Invalid Token or Protected Header formatting');\n  }\n}", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n  if (typeof jwt !== 'string') throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n  const {\n    1: payload,\n    length\n  } = jwt.split('.');\n  if (length === 5) throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n  if (length !== 3) throw new JWTInvalid('Invalid JWT');\n  if (!payload) throw new JWTInvalid('JWTs must contain a payload');\n  let decoded;\n  try {\n    decoded = base64url(payload);\n  } catch {\n    throw new JWTInvalid('Failed to base64url decode the payload');\n  }\n  let result;\n  try {\n    result = JSON.parse(decoder.decode(decoded));\n  } catch {\n    throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n  }\n  if (!isObject(result)) throw new JWTInvalid('Invalid JWT Claims Set');\n  return result;\n}", "import { createSecretKey, generateKeyPair as generateKeyPairCb } from 'node:crypto';\nimport { promisify } from 'node:util';\nimport random from './random.js';\nimport { JOSENotSupported } from '../util/errors.js';\nconst generate = promisify(generateKeyPairCb);\nexport async function generateSecret(alg, options) {\n  let length;\n  switch (alg) {\n    case 'HS256':\n    case 'HS384':\n    case 'HS512':\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      length = parseInt(alg.slice(-3), 10);\n      break;\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n    case 'A128GCMKW':\n    case 'A192GCMKW':\n    case 'A256GCMKW':\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      length = parseInt(alg.slice(1, 4), 10);\n      break;\n    default:\n      throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n  }\n  return createSecretKey(random(new Uint8Array(length >> 3)));\n}\nexport async function generateKeyPair(alg, options) {\n  switch (alg) {\n    case 'RS256':\n    case 'RS384':\n    case 'RS512':\n    case 'PS256':\n    case 'PS384':\n    case 'PS512':\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n    case 'RSA1_5':\n      {\n        const modulusLength = options?.modulusLength ?? 2048;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n          throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n        }\n        const keypair = await generate('rsa', {\n          modulusLength,\n          publicExponent: 0x10001\n        });\n        return keypair;\n      }\n    case 'ES256':\n      return generate('ec', {\n        namedCurve: 'P-256'\n      });\n    case 'ES256K':\n      return generate('ec', {\n        namedCurve: 'secp256k1'\n      });\n    case 'ES384':\n      return generate('ec', {\n        namedCurve: 'P-384'\n      });\n    case 'ES512':\n      return generate('ec', {\n        namedCurve: 'P-521'\n      });\n    case 'EdDSA':\n      {\n        switch (options?.crv) {\n          case undefined:\n          case 'Ed25519':\n            return generate('ed25519');\n          case 'Ed448':\n            return generate('ed448');\n          default:\n            throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448');\n        }\n      }\n    case 'ECDH-ES':\n    case 'ECDH-ES+A128KW':\n    case 'ECDH-ES+A192KW':\n    case 'ECDH-ES+A256KW':\n      {\n        const crv = options?.crv ?? 'P-256';\n        switch (crv) {\n          case undefined:\n          case 'P-256':\n          case 'P-384':\n          case 'P-521':\n            return generate('ec', {\n              namedCurve: crv\n            });\n          case 'X25519':\n            return generate('x25519');\n          case 'X448':\n            return generate('x448');\n          default:\n            throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n        }\n      }\n    default:\n      throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n  }\n}", "import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n  return generate(alg, options);\n}", "import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n  return generate(alg, options);\n}", "export default 'node:crypto';", "import value from '../runtime/runtime.js';\nexport default value;"],
  "mappings": "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",
  "names": ["message", "util", "webcrypto", "types", "types", "tag", "types", "Buffer", "KeyObject", "createDecipheriv", "KeyObject", "types", "Buffer", "createDecipheriv", "KeyObject", "KeyObject", "getNamedCurve", "KeyObject", "types", "KeyObject", "types", "promisify", "KeyObject", "p2s", "promisify", "KeyObject", "types", "p2s", "decrypt", "KeyObject", "ensureKeyObject", "KeyObject", "types", "encrypt", "decrypt", "bitLength", "KeyObject", "Buffer", "KeyObject", "types", "Buffer", "createPrivateKey", "createPublicKey", "types", "createCipheriv", "KeyObject", "createCipheriv", "tag", "encrypt", "KeyObject", "types", "wrap", "unwrap", "tag", "bitLength", "decrypt", "p2s", "tag", "unwrap", "protectedHeader", "tag", "tag", "KeyObject", "KeyObject", "types", "bitLength", "encrypt", "p2s", "wrap", "tag", "jwe", "crypto", "promisify", "constants", "constants", "crypto", "promisify", "KeyObject", "createSecretKey", "types", "createSecretKey", "KeyObject", "promisify", "sign", "promisify", "verify", "jwk", "get", "base64url_exports", "decode", "encode", "encode", "decode", "decode", "decode", "createSecretKey", "generateKeyPairCb", "promisify", "promisify", "generateKeyPairCb", "createSecretKey", "generateKeyPair", "generateKeyPair", "generateSecret", "runtime_default"]
}
